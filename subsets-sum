Given an array of integers, print sums of all subsets in it. Output should be printed in increasing order of sums.

Input : arr[] = {2, 3}
Output: 0 2 3 5

Input : arr[] = {2, 4, 5}
Output : 0 2 4 5 6 7 9 11
Input:

The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. The first line of each test case is N, N is the size of array. The second line of each test case contains N space separated values of the array arr[].

Output:

Output for each test case should be space separated sums in increasing order.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 10
0 ≤ A[i] ≤ 100

Input:
2
2
1 2
3
5 2 1

Output:

0 1 2 3 
0 1 2 3 5 6 7 8 

#include<iostream>
using namespace std;
#include<vector>
#include<algorithm>
vector<int>v;
int sum(int *a,int i, int s,int size)
{
    if(size==i){
        v.push_back(s);
        return 0;
    }
    sum(a,i+1,s,size);
    sum(a,i+1,s+a[i],size);
}
int main()
 {
	int t;
	cin>>t;
	while(t--)
	{
	int n;
	cin>>n;int a[n];
	for(int i=0;i<n;i++) cin>>a[i];
	sum(a,0,0,n);
	int val=0;
	sort(v.begin(),v.end());
	for(int i=0;i<v.size();i++) cout<<v[i]<<" ";
	cout<<endl;
	v.clear();
	}
	
}
