Given an array A[] of n numbers and another number x, determine whether or not there exist three elements in A[] whose sum is exactly x.

Expected time complexity is O(n^2).

Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is n and x, n is the size of array.
The second line of each test case contains n integers representing array elements C[i].

Output:

Print 1 if there exist three elements in A whose sum is exactly x, else 0.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 200
1 ≤ A[i] ≤ 1000

Example:

Input:
2
6 13
1 4 45 6 10 8
5 10
1 2 4 3 6

Output:
1
1

#include <iostream>
using namespace std;
#include <algorithm>

int main() {
	//code
// 	return 0;t
int t;
cin>>t;
for(int i=0;i<t;i++)
{
    int n,temp;
    cin>>n>>temp;
    int a[n],flag=0;
    for(int j=0;j<n;j++) cin>>a[j];
    sort(a,a+n);
    for(int j=0;j<n-2;j++)
    {
        int l=j+1,r=n-1;
        while(l<r)
        {
            if((a[j]+a[l]+a[r])==temp){
                flag=1;
                break;
            }
            //cout<<"1\n";
            if((a[j]+a[l]+a[r])>temp)
            {
                r--;
            }
            if((a[j]+a[l]+a[r])<temp)
            {
                l++;
            }
           
        }
        
    }
    cout<<flag<<endl;
}
}
